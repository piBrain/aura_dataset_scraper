{"api_name":"drupal-routing","original_text":"'Simple table headers plus $_GET parameters sorted correctly.'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/8.3.x?order=title&sort=desc","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"// Reset $_GET from previous assertion.\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/8.3.x?order=title&sort=desc","request":[["GET","from"]]}
{"api_name":"drupal-routing","original_text":"// Test complex table headers plus $_GET parameters that should _not_\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/8.3.x?order=title&sort=desc","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"'Complex table headers plus non-overriding $_GET parameters sorted correctly.'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/8.3.x?order=title&sort=desc","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"// Test complex table headers plus $_GET parameters that _should_\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/8.3.x?order=title&sort=desc","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"'Complex table headers plus $_GET parameters sorted correctly.'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/8.3.x?order=title&sort=desc","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"// Test with simple table headers plus $_GET parameters that should _not_\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/class/TableSortExtenderTest/8.3.x","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"'Simple table headers plus non-overriding $_GET parameters sorted correctly.'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/class/TableSortExtenderTest/8.3.x","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"// Test with simple table headers plus $_GET parameters that _should_\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/class/TableSortExtenderTest/8.3.x","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"'Simple table headers plus $_GET parameters sorted correctly.'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/class/TableSortExtenderTest/8.3.x","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"// Reset $_GET from previous assertion.\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/class/TableSortExtenderTest/8.3.x","request":[["GET","from"]]}
{"api_name":"drupal-routing","original_text":"// Test complex table headers plus $_GET parameters that should _not_\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/class/TableSortExtenderTest/8.3.x","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"'Complex table headers plus non-overriding $_GET parameters sorted correctly.'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/class/TableSortExtenderTest/8.3.x","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"// Test complex table headers plus $_GET parameters that _should_\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/class/TableSortExtenderTest/8.3.x","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"'Complex table headers plus $_GET parameters sorted correctly.'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21KernelTests%21Core%21Render%21Element%21TableSortExtenderTest.php/class/TableSortExtenderTest/8.3.x","request":[["GET","parameters"]]}
{"api_name":"drupal-routing","original_text":"\n            Perform a POST HTTP request.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21system%21src%21Tests%21Session%21SessionHttpsTest.php/class/SessionHttpsTest/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Performs a POST HTTP request with a specific format.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21system%21src%21Tests%21Session%21SessionHttpsTest.php/class/SessionHttpsTest/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Serialize POST HTTP request values.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21system%21src%21Tests%21Session%21SessionHttpsTest.php/class/SessionHttpsTest/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Perform a POST HTTP request.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21taxonomy%21src%21Tests%21Views%21TaxonomyDefaultArgumentTest.php/class/TaxonomyDefaultArgumentTest/8.1.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Performs a POST HTTP request with a specific format.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21taxonomy%21src%21Tests%21Views%21TaxonomyDefaultArgumentTest.php/class/TaxonomyDefaultArgumentTest/8.1.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Serialize POST HTTP request values.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21taxonomy%21src%21Tests%21Views%21TaxonomyDefaultArgumentTest.php/class/TaxonomyDefaultArgumentTest/8.1.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Perform a POST HTTP request.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21taxonomy%21src%21Tests%21Views%21TaxonomyDefaultArgumentTest.php/class/TaxonomyDefaultArgumentTest/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Performs a POST HTTP request with a specific format.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21taxonomy%21src%21Tests%21Views%21TaxonomyDefaultArgumentTest.php/class/TaxonomyDefaultArgumentTest/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Serialize POST HTTP request values.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21taxonomy%21src%21Tests%21Views%21TaxonomyDefaultArgumentTest.php/class/TaxonomyDefaultArgumentTest/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Perform a POST HTTP request.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21taxonomy%21src%21Tests%21Views%21TaxonomyTestBase.php/class/TaxonomyTestBase/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Performs a POST HTTP request with a specific format.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21taxonomy%21src%21Tests%21Views%21TaxonomyTestBase.php/class/TaxonomyTestBase/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Serialize POST HTTP request values.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21taxonomy%21src%21Tests%21Views%21TaxonomyTestBase.php/class/TaxonomyTestBase/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Perform a POST HTTP request.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21language%21src%21Tests%21LanguageUrlRewritingTest.php/class/LanguageUrlRewritingTest/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Performs a POST HTTP request with a specific format.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21language%21src%21Tests%21LanguageUrlRewritingTest.php/class/LanguageUrlRewritingTest/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Serialize POST HTTP request values.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21language%21src%21Tests%21LanguageUrlRewritingTest.php/class/LanguageUrlRewritingTest/8.0.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Perform a POST HTTP request.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21language%21src%21Tests%21LanguageUrlRewritingTest.php/class/LanguageUrlRewritingTest/8.1.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Performs a POST HTTP request with a specific format.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21language%21src%21Tests%21LanguageUrlRewritingTest.php/class/LanguageUrlRewritingTest/8.1.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"\n            Serialize POST HTTP request values.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21modules%21language%21src%21Tests%21LanguageUrlRewritingTest.php/class/LanguageUrlRewritingTest/8.1.x","request":[["POST","HTTP"]]}
{"api_name":"drupal-routing","original_text":"   * Tests route filtering on POST form submission requests.\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/8.2.x","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"   * Tests route filtering on POST form submission requests.\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/8.2.x?order=title&sort=desc","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"   * Tests route filtering on POST form submission requests.\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/8.3.x","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"   * Tests route filtering on POST form submission requests.\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/8.0.x","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"   * Tests route filtering on POST form submission requests.\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/8.1.x","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"   * Tests route filtering on POST form submission requests.\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/8.2.x?order=title&sort=asc","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"   * Tests route filtering on POST form submission requests.\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/8.3.x?order=title&sort=desc","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"/**\n   * Tests route filtering on POST form submission requests.\n   */","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/class/ContentTypeHeaderMatcherTest/8.3.x","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"   * Tests route filtering on POST form submission requests.\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/8.1.x?order=title&sort=desc","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"   * Tests route filtering on POST form submission requests.\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/8.0.x?order=title&sort=desc","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"/**\n   * Tests route filtering on POST form submission requests.\n   */","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/class/ContentTypeHeaderMatcherTest/8.1.x","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"\n            Tests route filtering on POST form submission requests.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/class/ContentTypeHeaderMatcherTest/8.1.x","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"/**\n   * Tests route filtering on POST form submission requests.\n   */","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/class/ContentTypeHeaderMatcherTest/8.0.x","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"\n            Tests route filtering on POST form submission requests.          ","_type":"dict","api_url":"https://api.drupal.org/api/drupal/core%21tests%21Drupal%21Tests%21Core%21Routing%21ContentTypeHeaderMatcherTest.php/class/ContentTypeHeaderMatcherTest/8.0.x","request":[["POST","form"]]}
{"api_name":"drupal-routing","original_text":"/**\n   * Return an instance with the specified query string arguments.\n   *\n   * These values SHOULD remain immutable over the course of the incoming\n   * request. They MAY be injected during instantiation, such as from PHP's\n   * $_GET superglobal, or MAY be derived from some other value such as the\n   * URI. In cases where the arguments are parsed from the URI, the data\n   * MUST be compatible with what PHP's parse_str() would return for\n   * purposes of how duplicate query parameters are handled, and how nested\n   * sets are handled.\n   *\n   * Setting query string arguments MUST NOT change the URI stored by the\n   * request, nor the values in the server params.\n   *\n   * This method MUST be implemented in such a way as to retain the\n   * immutability of the message, and MUST return an instance that has the\n   * updated query string arguments.\n   *\n   * @param array $query Array of query string arguments, typically from\n   *     $_GET.\n   * @return self\n   */","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21psr%21http-message%21src%21ServerRequestInterface.php/interface/ServerRequestInterface/8.2.x?title=&title_1=&object_type=&order=summary&sort=asc","request":[["GET","superglobal,"]]}
{"api_name":"drupal-routing","original_text":"/**\n   * Return an instance with the specified query string arguments.\n   *\n   * These values SHOULD remain immutable over the course of the incoming\n   * request. They MAY be injected during instantiation, such as from PHP's\n   * $_GET superglobal, or MAY be derived from some other value such as the\n   * URI. In cases where the arguments are parsed from the URI, the data\n   * MUST be compatible with what PHP's parse_str() would return for\n   * purposes of how duplicate query parameters are handled, and how nested\n   * sets are handled.\n   *\n   * Setting query string arguments MUST NOT change the URI stored by the\n   * request, nor the values in the server params.\n   *\n   * This method MUST be implemented in such a way as to retain the\n   * immutability of the message, and MUST return an instance that has the\n   * updated query string arguments.\n   *\n   * @param array $query Array of query string arguments, typically from\n   *     $_GET.\n   * @return self\n   */","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21psr%21http-message%21src%21ServerRequestInterface.php/interface/ServerRequestInterface/8.2.x?title=&title_1=&object_type=&order=title&sort=desc","request":[["GET","superglobal,"]]}
{"api_name":"drupal-routing","original_text":"/**\n   * Return an instance with the specified query string arguments.\n   *\n   * These values SHOULD remain immutable over the course of the incoming\n   * request. They MAY be injected during instantiation, such as from PHP's\n   * $_GET superglobal, or MAY be derived from some other value such as the\n   * URI. In cases where the arguments are parsed from the URI, the data\n   * MUST be compatible with what PHP's parse_str() would return for\n   * purposes of how duplicate query parameters are handled, and how nested\n   * sets are handled.\n   *\n   * Setting query string arguments MUST NOT change the URI stored by the\n   * request, nor the values in the server params.\n   *\n   * This method MUST be implemented in such a way as to retain the\n   * immutability of the message, and MUST return an instance that has the\n   * updated query string arguments.\n   *\n   * @param array $query Array of query string arguments, typically from\n   *     $_GET.\n   * @return self\n   */","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21psr%21http-message%21src%21ServerRequestInterface.php/interface/ServerRequestInterface/8.2.x?title=&title_1=&object_type=&order=object_type&sort=asc","request":[["GET","superglobal,"]]}
{"api_name":"drupal-routing","original_text":"/**\n   * Return an instance with the specified query string arguments.\n   *\n   * These values SHOULD remain immutable over the course of the incoming\n   * request. They MAY be injected during instantiation, such as from PHP's\n   * $_GET superglobal, or MAY be derived from some other value such as the\n   * URI. In cases where the arguments are parsed from the URI, the data\n   * MUST be compatible with what PHP's parse_str() would return for\n   * purposes of how duplicate query parameters are handled, and how nested\n   * sets are handled.\n   *\n   * Setting query string arguments MUST NOT change the URI stored by the\n   * request, nor the values in the server params.\n   *\n   * This method MUST be implemented in such a way as to retain the\n   * immutability of the message, and MUST return an instance that has the\n   * updated query string arguments.\n   *\n   * @param array $query Array of query string arguments, typically from\n   *     $_GET.\n   * @return self\n   */","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21psr%21http-message%21src%21ServerRequestInterface.php/interface/ServerRequestInterface/8.2.x?title=&title_1=&object_type=&order=modifiers&sort=asc","request":[["GET","superglobal,"]]}
{"api_name":"drupal-routing","original_text":"     * $_GET superglobal, or MAY be derived from some other value such as the\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21psr%21http-message%21src%21ServerRequestInterface.php/8.2.x","request":[["GET","superglobal,"]]}
{"api_name":"drupal-routing","original_text":"/**\n   * Return an instance with the specified query string arguments.\n   *\n   * These values SHOULD remain immutable over the course of the incoming\n   * request. They MAY be injected during instantiation, such as from PHP's\n   * $_GET superglobal, or MAY be derived from some other value such as the\n   * URI. In cases where the arguments are parsed from the URI, the data\n   * MUST be compatible with what PHP's parse_str() would return for\n   * purposes of how duplicate query parameters are handled, and how nested\n   * sets are handled.\n   *\n   * Setting query string arguments MUST NOT change the URI stored by the\n   * request, nor the values in the server params.\n   *\n   * This method MUST be implemented in such a way as to retain the\n   * immutability of the message, and MUST return an instance that has the\n   * updated query string arguments.\n   *\n   * @param array $query Array of query string arguments, typically from\n   *     $_GET.\n   * @return self\n   */","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21psr%21http-message%21src%21ServerRequestInterface.php/interface/ServerRequestInterface/8.2.x?title=&title_1=&object_type=&order=summary&sort=desc","request":[["GET","superglobal,"]]}
{"api_name":"drupal-routing","original_text":"/**\n   * Return an instance with the specified query string arguments.\n   *\n   * These values SHOULD remain immutable over the course of the incoming\n   * request. They MAY be injected during instantiation, such as from PHP's\n   * $_GET superglobal, or MAY be derived from some other value such as the\n   * URI. In cases where the arguments are parsed from the URI, the data\n   * MUST be compatible with what PHP's parse_str() would return for\n   * purposes of how duplicate query parameters are handled, and how nested\n   * sets are handled.\n   *\n   * Setting query string arguments MUST NOT change the URI stored by the\n   * request, nor the values in the server params.\n   *\n   * This method MUST be implemented in such a way as to retain the\n   * immutability of the message, and MUST return an instance that has the\n   * updated query string arguments.\n   *\n   * @param array $query Array of query string arguments, typically from\n   *     $_GET.\n   * @return self\n   */","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21psr%21http-message%21src%21ServerRequestInterface.php/interface/ServerRequestInterface/8.2.x?title=&title_1=&object_type=&order=object_type&sort=desc","request":[["GET","superglobal,"]]}
{"api_name":"drupal-routing","original_text":"/**\n   * Return an instance with the specified query string arguments.\n   *\n   * These values SHOULD remain immutable over the course of the incoming\n   * request. They MAY be injected during instantiation, such as from PHP's\n   * $_GET superglobal, or MAY be derived from some other value such as the\n   * URI. In cases where the arguments are parsed from the URI, the data\n   * MUST be compatible with what PHP's parse_str() would return for\n   * purposes of how duplicate query parameters are handled, and how nested\n   * sets are handled.\n   *\n   * Setting query string arguments MUST NOT change the URI stored by the\n   * request, nor the values in the server params.\n   *\n   * This method MUST be implemented in such a way as to retain the\n   * immutability of the message, and MUST return an instance that has the\n   * updated query string arguments.\n   *\n   * @param array $query Array of query string arguments, typically from\n   *     $_GET.\n   * @return self\n   */","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21psr%21http-message%21src%21ServerRequestInterface.php/interface/ServerRequestInterface/8.2.x?title=&title_1=&object_type=&order=title&sort=asc","request":[["GET","superglobal,"]]}
{"api_name":"drupal-routing","original_text":"/**\n   * Return an instance with the specified query string arguments.\n   *\n   * These values SHOULD remain immutable over the course of the incoming\n   * request. They MAY be injected during instantiation, such as from PHP's\n   * $_GET superglobal, or MAY be derived from some other value such as the\n   * URI. In cases where the arguments are parsed from the URI, the data\n   * MUST be compatible with what PHP's parse_str() would return for\n   * purposes of how duplicate query parameters are handled, and how nested\n   * sets are handled.\n   *\n   * Setting query string arguments MUST NOT change the URI stored by the\n   * request, nor the values in the server params.\n   *\n   * This method MUST be implemented in such a way as to retain the\n   * immutability of the message, and MUST return an instance that has the\n   * updated query string arguments.\n   *\n   * @param array $query Array of query string arguments, typically from\n   *     $_GET.\n   * @return self\n   */","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21psr%21http-message%21src%21ServerRequestInterface.php/interface/ServerRequestInterface/8.2.x?title=&title_1=&object_type=&order=modifiers&sort=desc","request":[["GET","superglobal,"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $query $_GET superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.2.x","request":[["GET","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $body $_POST superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.2.x","request":[["POST","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $query $_GET superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.3.x","request":[["GET","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $body $_POST superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.3.x","request":[["POST","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $query $_GET superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.3.x?order=title&sort=desc","request":[["GET","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $body $_POST superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.3.x?order=title&sort=desc","request":[["POST","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $query $_GET superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.2.x?order=title&sort=desc","request":[["GET","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $body $_POST superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.2.x?order=title&sort=desc","request":[["POST","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $query $_GET superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.1.x","request":[["GET","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $body $_POST superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.1.x","request":[["POST","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $query $_GET superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.2.x?order=title&sort=asc","request":[["GET","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $body $_POST superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.2.x?order=title&sort=asc","request":[["POST","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $query $_GET superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.1.x?order=title&sort=desc","request":[["GET","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * @param array $body $_POST superglobal\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21zendframework%21zend-diactoros%21src%21ServerRequestFactory.php/8.1.x?order=title&sort=desc","request":[["POST","superglobal"]]}
{"api_name":"drupal-routing","original_text":"     * $_GET superglobal, or MAY be derived from some other value such as the\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21psr%21http-message%21src%21ServerRequestInterface.php/8.2.x?order=title&sort=desc","request":[["GET","superglobal,"]]}
{"api_name":"drupal-routing","original_text":"     * $_GET superglobal, or MAY be derived from some other value such as the\n","_type":"dict","api_url":"https://api.drupal.org/api/drupal/vendor%21psr%21http-message%21src%21ServerRequestInterface.php/8.2.x?order=title&sort=asc","request":[["GET","superglobal,"]]}
{"api_name":"drupal-routing","original_text":"'DELETE FROM {url_alias} WHERE pid = %d'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path%21path.module/6.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"'DELETE FROM {url_alias} WHERE pid = %d'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path%21path.module/6.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE dst = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path%21path.module/6.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE src = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path%21path.module/6.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"'DELETE FROM {url_alias} WHERE pid = %d'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path%21path.module/5.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE src = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path%21path.module/5.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE dst = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path%21path.module/5.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"'DELETE FROM {url_alias} WHERE pid = %d'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.7.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE src = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.7.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE dst = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.7.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"'DELETE FROM {url_alias} WHERE pid = %d'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.6.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE src = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.6.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE dst = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.6.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"'DELETE FROM {url_alias} WHERE pid = %d'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path%21path.module/5.x?order=title&sort=desc","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE src = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path%21path.module/5.x?order=title&sort=desc","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE dst = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path%21path.module/5.x?order=title&sort=desc","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"'DELETE FROM {url_alias} WHERE pid = %d'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.6.x?order=title&sort=desc","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE src = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.6.x?order=title&sort=desc","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE dst = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.6.x?order=title&sort=desc","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE src = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/function/path_set_alias/4.6.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE dst = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/function/path_set_alias/4.6.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"'DELETE FROM {url_alias} WHERE pid = %d'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.7.x?order=title&sort=desc","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE src = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.7.x?order=title&sort=desc","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE dst = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/4.7.x?order=title&sort=desc","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"'DELETE FROM {url_alias} WHERE pid = %d'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/function/path_admin_delete/4.6.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE src = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/function/path_set_alias/4.7.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"\"DELETE FROM {url_alias} WHERE dst = '%s'\"","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/function/path_set_alias/4.7.x","request":[["DELETE","FROM"]]}
{"api_name":"drupal-routing","original_text":"'DELETE FROM {url_alias} WHERE pid = %d'","_type":"dict","api_url":"https://api.drupal.org/api/drupal/modules%21path.module/function/path_admin_delete/4.7.x","request":[["DELETE","FROM"]]}
